@import url("http://fonts.googleapis.com/css?family=Pompiere|Lily+Script+One");
*,
*:after,
*:before {
  box-sizing: border-box;
}
html,
body,
div,
span,
applet,
object,
iframe,
h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
pre,
a,
abbr,
acronym,
address,
big,
cite,
code,
del,
dfn,
em,
img,
ins,
kbd,
q,
s,
samp,
small,
strike,
strong,
sub,
sup,
tt,
var,
dl,
dt,
dd,
ol,
ul,
li,
fieldset,
form,
label,
legend,
table,
caption,
tbody,
tfoot,
thead,
tr,
th,
td {
  margin: 0;
  padding: 0;
  border: 0;
  outline: 0;
  font-weight: inherit;
  font-style: inherit;
  font-family: inherit;
  font-size: 100%;
  vertical-align: baseline;
}
body {
  line-height: 1;
  color: #000;
  background: #fff;
}
ol,
ul {
  list-style: none;
}
table {
  border-collapse: separate;
  border-spacing: 0;
  vertical-align: middle;
}
caption,
th,
td {
  text-align: left;
  font-weight: normal;
  vertical-align: middle;
}
a img {
  border: none;
}
html,
body {
  width: 100%;
  height: 100%;
  min-height: 100%;
}
body {
  background: ;
  color: ;
}
body {
  font-size: 14px;
  font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;
  line-height: 1.75;
}
.wrapper {
  position: relative;
  width: 100%;
  height: 100%;
  margin: 0 auto;
  overflow: hidden;
}
.scene {
  height: 100%;
  position: relative;
  font-family: 'Pompiere';
}
.stage__control,
.stage__control--prev,
.stage__control--next {
  position: absolute;
  left: 50%;
  z-index: 99;
}
.stage__control--prev {
  top: 10px;
}
.stage__control--next {
  bottom: 10px;
}
.nav {
  content: "nav :)";
}
.scene-day {
  background-image: linear-gradient(0deg, #f3f0ff, #b2d6eb);
}
path {
  stroke-dasharray: 100;
  stroke-dashoffset: 100;
}
.scene-digest {
  background-image: linear-gradient(0deg, #b09caf, #dbf1ff);
}
.showtime {
  width: 100%;
  height: 100%;
  position: relative;
}
.slide,
.slide--1,
.slide--2,
.slide--3 {
  position: absolute;
  -webkit-transform-style: preserve-3d;
          transform-style: preserve-3d;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
      -ms-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
  width: 100%;
  height: 100%;
  background: #fff;
}
@media only screen and (min-width: 48em) {
  .slide,
  .slide--1,
  .slide--2,
  .slide--3 {
    width: 75%;
    height: 75%;
  }
}
.slide--1 {
  background-color: #ec799a;
}
.slide--2 {
  background-color: #fdb813;
}
.slide--3 {
  background-color: #218c8d;
}
.scene-night {
  background-image: linear-gradient(0deg, #da988b, #858585);
}
.stage {
  height: 100%;
  transition: -webkit-transform 1s;
  transition: transform 1s;
}
.stage.day {
  -webkit-transform: translateY(0);
      -ms-transform: translateY(0);
          transform: translateY(0);
}
.stage.digest {
  -webkit-transform: translateY(-100%);
      -ms-transform: translateY(-100%);
          transform: translateY(-100%);
}
.stage.night {
  -webkit-transform: translateY(-200%);
      -ms-transform: translateY(-200%);
          transform: translateY(-200%);
}
.dg.ac {
  z-index: 999999 !important;
}
.dg .cr.function .property-name {
  width: 100%;
}
/*# sourceMappingURL=data:application/json;base64, */