@import url("http://fonts.googleapis.com/css?family=Pompiere|Lily+Script+One|Slabo+27px");
*,
*:after,
*:before {
  box-sizing: border-box;
}
html,
body,
div,
span,
applet,
object,
iframe,
h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
pre,
a,
abbr,
acronym,
address,
big,
cite,
code,
del,
dfn,
em,
img,
ins,
kbd,
q,
s,
samp,
small,
strike,
strong,
sub,
sup,
tt,
var,
dl,
dt,
dd,
ol,
ul,
li,
fieldset,
form,
label,
legend,
table,
caption,
tbody,
tfoot,
thead,
tr,
th,
td {
  margin: 0;
  padding: 0;
  border: 0;
  outline: 0;
  font-weight: inherit;
  font-style: inherit;
  font-family: inherit;
  font-size: 100%;
  vertical-align: baseline;
}
body {
  line-height: 1;
  color: #000;
  background: #fff;
}
ol,
ul {
  list-style: none;
}
table {
  border-collapse: separate;
  border-spacing: 0;
  vertical-align: middle;
}
caption,
th,
td {
  text-align: left;
  font-weight: normal;
  vertical-align: middle;
}
a img {
  border: none;
}
html,
body {
  width: 100%;
  height: 100%;
  min-height: 100%;
}
body {
  background: ;
  color: ;
}
body {
  font-size: 14px;
  font-family: 'Slabo 27px', Georgia, serif;
  line-height: 1.75;
}
h2 {
  font-size: 30px;
  font-family: 'Lily Script One', cursive;
}
.wrapper {
  position: relative;
  width: 100%;
  height: 100%;
  margin: 0 auto;
  overflow: hidden;
}
.sky {
  width: 100%;
  height: 300%;
  position: absolute;
  top: 0;
  left: 0;
  transition: -webkit-transform 1s;
  transition: transform 1s;
  background-image: linear-gradient(#f3f0ff 0%, #b2d6eb 33%, #b09caf 70%, #272334 90%);
}
.sky.day {
  -webkit-transform: translateY(0);
      -ms-transform: translateY(0);
          transform: translateY(0);
}
.sky.digest {
  -webkit-transform: translateY(-33.333333333%);
      -ms-transform: translateY(-33.333333333%);
          transform: translateY(-33.333333333%);
}
.sky.night {
  -webkit-transform: translateY(-66.666666666%);
      -ms-transform: translateY(-66.666666666%);
          transform: translateY(-66.666666666%);
}
.scene {
  height: 100%;
  position: relative;
  z-index: 2;
}
.nav {
  content: "nav :)";
}
.greeting {
  position: absolute;
  -webkit-transform-style: preserve-3d;
          transform-style: preserve-3d;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
      -ms-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
  width: 75%;
  height: 75%;
  text-align: center;
}
@media only screen and (min-width: 48em) {
  .greeting {
    width: 50%;
    height: 50%;
  }
}
.showtime {
  width: 100%;
  height: 100%;
  position: relative;
}
.showtime__control,
.showtime__control--prev,
.showtime__control--next {
  position: absolute;
  -webkit-transform-style: preserve-3d;
          transform-style: preserve-3d;
  top: 50%;
  -webkit-transform: translateY(-50%);
      -ms-transform: translateY(-50%);
          transform: translateY(-50%);
  z-index: 10;
}
.showtime__control--prev {
  left: 0;
}
.showtime__control--next {
  right: 0;
}
.slide,
.slide--1,
.slide--2,
.slide--3 {
  position: absolute;
  -webkit-transform-style: preserve-3d;
          transform-style: preserve-3d;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
      -ms-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
  width: 100%;
  height: 100%;
  background: #fff;
}
@media only screen and (min-width: 48em) {
  .slide,
  .slide--1,
  .slide--2,
  .slide--3,
.slide--1,
.slide--2,
.slide--3 {
    width: 75%;
    height: 75%;
  }
}
.slide--1 {
  background-color: #ec799a;
}
.slide--2 {
  background-color: #fdb813;
}
.slide--3 {
  background-color: #218c8d;
}
.flower {
  width: 170px;
  height: 120px;
  background: url("../img/floral.png") no-repeat -800px -227px;
  position: absolute;
  bottom: 0;
  left: 0;
}
.stage {
  width: 100%;
  height: 100%;
  position: absolute;
  top: 0;
  left: 0;
}
.stage__control,
.stage__control--prev,
.stage__control--next {
  z-index: 99;
  width: 100%;
  height: 30px;
  position: absolute;
  cursor: pointer;
  opacity: 0.7;
  transition: 0.2s;
}
.stage__control:hover,
.stage__control--prev:hover,
.stage__control--next:hover,
.stage__control:focus,
.stage__control--prev:focus,
.stage__control--next:focus {
  opacity: 1;
}
.stage__control svg,
.stage__control--prev svg,
.stage__control--next svg {
  position: absolute;
  -webkit-transform-style: preserve-3d;
          transform-style: preserve-3d;
  left: 50%;
  -webkit-transform: translateX(-50%);
      -ms-transform: translateX(-50%);
          transform: translateX(-50%);
  width: 50px;
  height: auto;
}
.stage__control--prev {
  top: 10px;
}
.stage__control--next {
  bottom: 10px;
}
.farm,
.farm--day,
.farm--digest,
.farm--night {
  width: 100%;
  height: 50%;
  position: fixed;
  bottom: 0px;
  ((null)): 0;
  z-index: 1;
}
.cable,
.cable--left,
.cable--right {
  width: 50%;
  height: auto;
  position: absolute;
  top: 0;
  ((null)): 0;
}
.cable--left {
  left: 0;
}
.cable--right {
  right: 0;
  -webkit-transform: scaleX(-1);
      -ms-transform: scaleX(-1);
          transform: scaleX(-1);
}
.flag {
  width: 0;
  height: 0;
  border-style: solid;
  border-width: 50px 25px 0 25px;
  border-color: #29a2c6 transparent transparent transparent;
  position: absolute;
}
.flag:first-of-type {
  top: 5px;
  left: 0;
  -webkit-transform: rotate(10deg);
      -ms-transform: rotate(10deg);
          transform: rotate(10deg);
}
.field {
  width: 100%;
  height: 100px;
  background-color: #7ab490;
  position: absolute;
  bottom: 0;
  ((null)): 0;
}
.camber {
  width: 100%;
  height: auto;
  position: absolute;
  bottom: 90px;
  right: -10px;
}
.bunting {
  width: 100%;
  height: 300px;
  position: absolute;
  bottom: 10px;
  ((null)): 0;
}
.pole {
  position: absolute;
  -webkit-transform-style: preserve-3d;
          transform-style: preserve-3d;
  left: 50%;
  -webkit-transform: translateX(-50%);
      -ms-transform: translateX(-50%);
          transform: translateX(-50%);
  width: 4px;
  height: 300px;
  background-color: #745433;
}
.tree,
.tree--dark {
  width: 0;
  height: 0;
  border-style: solid;
  border-width: 0 17.5px 50px 17.5px;
  border-color: transparent transparent #00ffb7 transparent;
  position: absolute;
  margin-top: 40px;
  z-index: 19;
}
.tree:before,
.tree--dark:before {
  content: "";
  width: 0;
  height: 0;
  border-style: solid;
  border-width: 0 17.5px 40px 17.5px;
  border-color: transparent transparent #00ffb7 transparent;
  position: absolute;
  top: -10px;
  left: -17px;
}
.tree:after,
.tree--dark:after {
  content: "";
  width: 15px;
  height: 20px;
  box-shadow: inset 0px 5px 10px rgba(0,0,0,0.3);
  background-color: #d98938;
  position: absolute;
  bottom: -70px;
  left: -7px;
}
.tree:nth-child(1),
.tree--dark:nth-child(1) {
  bottom: 100px;
  left: -10px;
}
.tree:nth-child(2),
.tree--dark:nth-child(2) {
  bottom: 90px;
  left: 10px;
}
.tree:nth-child(3),
.tree--dark:nth-child(3) {
  bottom: 100px;
  left: 20px;
  z-index: 10;
}
.tree:nth-child(4),
.tree--dark:nth-child(4) {
  bottom: 80px;
  left: 80px;
}
.tree--dark {
  border-color: transparent transparent #00cc92 transparent;
}
.tree--dark:before {
  border-color: transparent transparent #00cc92 transparent;
}
.tent,
.tent--blue,
.tent--pink {
  width: 140px;
  height: 170px;
  display: inline-block;
  position: absolute;
  right: 0;
  bottom: 30px;
  -webkit-transform: scale(0.8);
      -ms-transform: scale(0.8);
          transform: scale(0.8);
}
.tent:nth-child(1),
.tent--blue:nth-child(1),
.tent--pink:nth-child(1) {
  right: 250px;
}
.tent:nth-child(2),
.tent--blue:nth-child(2),
.tent--pink:nth-child(2) {
  right: 125px;
}
.tent--blue .canvas,
.tent--blue .canvas:before {
  border-bottom-color: #29a2c6;
}
.tent--blue .awning {
  background-color: #e85f0c;
}
.tent--pink .canvas,
.tent--pink .canvas:before {
  border-bottom-color: #ec799a;
}
.tent--pink .awning {
  background-color: #218c8d;
}
.canvas {
  width: 140px;
  height: 160px;
  border-left: 20px solid transparent;
  border-right: 20px solid transparent;
  border-bottom: 80px solid #fdb813;
  position: absolute;
  top: 0px;
}
.canvas:before {
  content: "";
  display: block;
  width: 0;
  height: 0;
  border-left: 50px solid transparent;
  border-right: 50px solid transparent;
  border-bottom: 25px solid #4d8963;
  position: absolute;
  top: 53px;
  left: 0px;
}
.flaps {
  width: 0;
  height: 0;
  margin-left: -25px;
  border-left: 25px solid transparent;
  border-right: 25px solid transparent;
  border-bottom: 75px solid #745433;
  position: absolute;
  bottom: -80px;
  left: 50%;
}
.flaps:before {
  content: "";
  display: block;
  width: 0;
  height: 0;
  margin-left: -25px;
  border-left: 25px solid transparent;
  border-bottom: 75px solid #946741;
  opacity: 0.5;
}
.awning {
  width: 50px;
  height: 7px;
  margin-left: -25px;
  background-color: #d9574a;
  position: absolute;
  top: 75px;
  left: 50%;
}
.awning:before {
  content: "";
  display: block;
  width: 38px;
  height: 83px;
  border-left: 2px solid #745433;
  border-right: 2px solid #745433;
  position: absolute;
  top: 0;
  left: 6px;
}
.awning:after {
  content: "";
  display: block;
  width: 50px;
  height: 93px;
  border-left: 2px solid #745433;
  border-right: 2px solid #745433;
}
.fire {
  margin-top: 50px;
  margin-left: 50px;
  width: 100px;
  height: 100px;
  border-bottom-right-radius: 50%;
  border-bottom-left-radius: 50%;
  border-top-left-radius: 50%;
  -webkit-transform: rotate(-45deg) scale(0.2);
      -ms-transform: rotate(-45deg) scale(0.2);
          transform: rotate(-45deg) scale(0.2);
  z-index: 2;
  background: #e85f0c;
  position: absolute;
  bottom: -20px;
  right: 145px;
}
.fire:after {
  content: "";
  display: block;
  width: 50px;
  height: 50px;
  border-bottom-right-radius: 50%;
  border-bottom-left-radius: 50%;
  border-top-left-radius: 50%;
  z-index: 3;
  background: #fdb813;
  position: absolute;
  bottom: 20px;
  left: 20px;
}
.logs {
  width: 100px;
  height: 20px;
  background: #745433;
  -webkit-transform: rotate(30deg);
      -ms-transform: rotate(30deg);
          transform: rotate(30deg);
  position: absolute;
  bottom: 0px;
  left: -37px;
  z-index: 1;
}
.logs:after {
  content: "";
  width: 100px;
  height: 20px;
  background: #745433;
  -webkit-transform: rotate(30deg);
      -ms-transform: rotate(30deg);
          transform: rotate(30deg);
  position: absolute;
  bottom: 0px;
  left: 0px;
  z-index: 1;
}
.dg.ac {
  z-index: 999999 !important;
}
.dg .cr.function .property-name {
  width: 100%;
}
/*# sourceMappingURL=data:application/json;base64, */